{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search/search-box.component.js","App.js","index.js"],"names":["Card","monster","className","alt","src","Math","floor","random","id","name","email","CardList","monsters","map","mon","i","key","SearchBox","placeholder","handleChange","onChange","type","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6UAGaA,G,YAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAErB,OACE,yBAAKC,UAAU,kBACb,yBAAKC,IAAI,UACPC,IAAG,+BAJK,CAAC,WAAY,WAAY,WAAY,YAIRC,KAAKC,MAAsB,EAAhBD,KAAKE,WAAlD,uBAA+EN,EAAQO,GAAvF,mBACL,4BAAKP,EAAQQ,MACb,2BAAIR,EAAQS,UCNLC,EAAW,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACxB,OACA,yBAAKV,UAAU,aACZU,EAASC,KAAI,SAACC,EAAKC,GAAN,OAAY,kBAAC,EAAD,CAAMC,IAAKF,EAAIN,GAAIP,QAASa,SCJ7CG,G,MAAY,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,aACtC,OACE,2BAAOC,SAAUD,EACfjB,UAAU,SAASmB,KAAK,SACxBH,YAAaA,MCqCJI,G,wDAvCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtC,EAAKC,MAAQ,CACXhB,SAAU,GACVa,YAAa,IAJH,E,gEASO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEZ,SAAUqB,S,+BAMnC,IAAD,EAC2BC,KAAKN,MAA/BH,EADD,EACCA,YACFU,EAFC,EACcvB,SACawB,QAAO,SAAAtB,GAAG,OAC1CA,EAAIL,KAAK4B,cAAcC,SAASb,EAAYY,kBAE9C,OACE,yBAAKnC,UAAU,OAKb,+CACA,kBAAC,EAAD,CAAWgB,YAAY,kBACrBC,aAAce,KAAKf,eAErB,kBAAC,EAAD,CAAUP,SAAUuB,S,GAlCVI,cCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.ce17c66f.chunk.js","sourcesContent":["import React from 'react';\nimport './card.styles.css';\n\nexport const Card = ({ monster }) => {\n  let imgSets = ['set_set1', 'set_set2', 'set_set3', 'set_set4']\n  return (\n    <div className=\"card-container\">\n      <img alt=\"monster\"\n        src={`https://robohash.org/${imgSets[Math.floor(Math.random() * 4)]}/bgset_bg1//${monster.id}?size=180x180`} />\n      <h2>{monster.name}</h2>\n      <p>{monster.email}</p>\n    </div>\n  )\n};","import React from 'react'\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component';\n\nexport const CardList = ({monsters}) => {\n  return (\n  <div className=\"card-list\">\n    {monsters.map((mon, i) => <Card key={mon.id} monster={mon}></Card>)}\n    </div>);\n};","import React from 'react'\nimport './search-box.styles.css';\n\nexport const SearchBox = ({placeholder, handleChange})=> {\n  return (\n    <input onChange={handleChange}\n      className=\"search\" type=\"search\"\n      placeholder={placeholder} />\n  )\n};","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search/search-box.component';\nimport './App.css';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n    // this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users }))\n  };\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n  render() {\n    const { searchField, monsters } = this.state;\n    const filteredMonsters = monsters.filter(mon =>\n      mon.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n\n\n\n\n        <h1>Monster Rolodex</h1>\n        <SearchBox placeholder=\"Search Monsters\"\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}